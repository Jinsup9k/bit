package swing;

import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class JTabelEx2 extends JFrame implements ActionListener {
	private ArrayList<PersonDTO> list; // 테이블엔 리스트가 안붙더라..
	private Vector<String> title;
	private DefaultTableModel model;
	private JTable table;
	private JButton insertButton, deleteButton;
	private JPanel p1;

	public JTabelEx2() {
		list = new ArrayList<PersonDTO>();
		list.add(new PersonDTO("hong", "홍길동", "111", "010-123-1234"));
		list.add(new PersonDTO("jong", "종길동", "222", "010-456-4567"));

		title = new Vector<String>();
		title.addElement("ID");
		title.addElement("NAME");
		title.addElement("PASSWORD");
		title.addElement("PHONE");

		model = new DefaultTableModel(title, 0) {// 빈행의 수를 의미한다.
			@Override
			public boolean isCellEditable(int r, int c) {// 0번째 줄은 수정이 불가능
				return (c != 0) ? true : false;
			}
		};

		for (PersonDTO dto : list) {
			Vector<String> v = new Vector<String>();
			v.add(dto.getId());
			v.add(dto.getName());
			v.add(dto.getPassword());
			v.add(dto.getTel());

			model.addRow(v);
		}
		table = new JTable(model);
		JScrollPane scroll = new JScrollPane(table);

		insertButton = new JButton("추가");
		deleteButton = new JButton("삭제");
		p1 = new JPanel(new FlowLayout(FlowLayout.RIGHT));
		p1.add(insertButton);
		p1.add(deleteButton);
		insertButton.addActionListener(this);
		deleteButton.addActionListener(this);

		Container con = getContentPane();
		con.add("Center", scroll);
		con.add("South", p1);
		setBounds(200, 300, 500, 500);
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getActionCommand() == insertButton.getActionCommand()) {
			insert();
		} else if (e.getActionCommand() == deleteButton.getActionCommand()) {
			delete();
		}
	}

	private void delete() {
		String name = JOptionPane.showInputDialog(this, "이름을 입력하시오 :");

		Iterator<PersonDTO> it = list.iterator();
		while (it.hasNext()) {
			PersonDTO dto = it.next();

			if (dto.getName().equals(name)) {
				it.remove();
				// model.removeRow(row);
				return;
			}
		}
		JOptionPane.showMessageDialog(this, "찾는 회원이 없습니다.");
	}

	private void insert() {
		String id = JOptionPane.showInputDialog(this, "ID 입력 :");

		if (id == null)
			return;

		for (int i = 0; i < model.getRowCount(); i++) {
			if (id.equals(model.getValueAt(i, 0))) {
				JOptionPane.showMessageDialog(this, "중복된 아이디 입니다.");
				return;
			}
		}
		String name = JOptionPane.showInputDialog(this, "이름을 입력하시오 :");
		String password = JOptionPane.showInputDialog(this, "PW 입력 :");
		String tel = JOptionPane.showInputDialog(this, "전화번호 입력 :");

		Vector<String> v = new Vector<String>();
		v.add(id);
		v.add(name);
		v.add(password);
		v.add(tel);

		model.addRow(v);
		JOptionPane.showMessageDialog(this, "가입 완료!");

	}

	public static void main(String[] args) {
		new JTabelEx2();
	}
}
